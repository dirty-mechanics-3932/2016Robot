plugins {
  id "com.diffplug.gradle.spotless" version "1.3.3"
  id 'com.github.johnrengelman.shadow' version '1.2.3'
}

configurations {
    sshAntTaskDef
}

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'eclipse'

sourceCompatibility = 1.8

eclipse.classpath.file {
    beforeMerged { classpath ->
        classpath.entries.removeAll { entry -> entry.kind == 'lib' || entry.kind == 'var' }
    }
}

repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    maven {
        url "http://first.wpi.edu/FRC/roborio/maven/release"
    }
}

// Import Ant build and prefix all task names with 'ant-'.
ant.importBuild('build.xml') { antTaskName ->
    "ant_${antTaskName}".toString()
}

defaultTasks 'format', 'build'

// Set group property for all Ant tasks.
tasks.matching { task ->
    task.name.startsWith('ant_')
}*.group = 'Ant'

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    // compile 'org.slf4j:slf4j-api:1.7.21'

    // The following dependencies were found at http://wpilib.screenstepslive.com/s/4485/m/wpilib_source/l/480976-maven-artifacts
    compile 'edu.wpi.first.wpilibj:wpilibJavaFinal:0.1.0-SNAPSHOT' // WPILibJ uberjar
    compile 'edu.wpi.first.wpilib.networktables.java:NetworkTables:3.0.0-SNAPSHOT:desktop'

    compile files('./lib/navx_frc.jar')

    compileOnly "org.projectlombok:lombok:1.16.8"

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:1.+'

    sshAntTaskDef 'org.apache.ant:ant-jsch:1.9.7'
}

spotless {
    java {
        licenseHeaderFile 'spotless/license-header.txt'
        // An import ordering file, exported from Eclipse
        importOrderFile 'spotless/frc.importorder'
        // XML file dumped out by the Eclipse formatter
        eclipseFormatFile 'spotless/frc-format.xml'
        trimTrailingWhitespace()
    }
    format 'misc', {
        target '**/*.xml', '.gitignore', "*.properties", "*.gradle"
        indentWithSpaces()
        trimTrailingWhitespace()
        endWithNewline()
    }
    // The default value of PLATFORM_NATIVE is recommended (can be WINDOWS, UNIX, or PLATFORM_NATIVE)
    lineEndings 'PLATFORM_NATIVE'
}

eclipse {
    classpath {
       downloadSources = true
       downloadSources = true
    }
}

jar {
    manifest {
        attributes("Main-Class": "edu.wpi.first.wpilibj.RobotBase",
                   "Robot-Class": ant.properties['robot.class'],
                   "Class-Path": ".")
    }
}

shadowJar {
    baseName = 'robot-deploy'
    classifier = null
    version = null
    exclude 'docs/'
    exclude 'overview.htm'
}

task loadSSHExec {
    doFirst {
        ant.taskdef(name: 'sshexec',
            classname: 'org.apache.tools.ant.taskdefs.optional.ssh.SSHExec',
            classpath: configurations.sshAntTaskDef.asPath)
    }
}

tasks.matching { task ->
    task.name.startsWith('ant_')
}.each {
    it.dependsOn('loadSSHExec')
}

// Aliases
ant_jar.dependsOn('shadowJar')
ant_clean.dependsOn('clean')
ant_compile.dependsOn('compileJava')
task deploy(dependsOn: 'ant_deploy', group: 'deploy')
task debugDeploy(dependsOn: 'ant_debugDeploy', group: 'deploy')
task format(dependsOn: 'spotlessApply', group: 'spotless')
